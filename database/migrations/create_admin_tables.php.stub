<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateAdminTables extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('admin_users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name')->comment('登录名');
            $table->string('user_name')->comment('昵称')->nullable();
            $table->string('password', 191);
            $table->boolean('status')->default(0)->comment('是否禁用,1:是,0否');
            $table->string('avatar')->comment('头像地址')->nullable();
            $table->string('token')->nullable();
            $table->timestamps();
            $table->softDeletes();

            $table->index('name', 'name_index');
            $table->index('status', 'status_index');
            $table->index('user_name', 'user_name_index');
        });

        Schema::create('menus', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('_lft');
            $table->integer('_rgt');
            $table->integer('parent_id')->nullable();
            $table->integer('order')->default(1)->comment('排序');
            $table->string('name')->comment('名称');
            $table->boolean('is_hide')->default(0)->comment('是否隐藏:1:隐藏,0:不隐藏');
            $table->string('icon')->comment('图标')->nullable();
            $table->string('path')->comment('路径');
            $table->string('permission')->comment('权限')->nullable();
            $table->timestamps();
            $table->softDeletes();

            $table->index('order', 'order_index');
            $table->index('is_hide', 'is_hide_index');
            $table->index(['_lft', '_rgt', 'parent_id'], '_lft_rgt_parent_id_index');
        });

        Schema::create('admin_roles', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name', 50)->unique();
            $table->string('slug', 50)->comment('标识')->unique();
            $table->timestamps();
        });

        Schema::create('admin_permissions', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name', 50)->unique();
            $table->string('slug', 50)->comment('标识')->unique();
            $table->string('http_method')->nullable();
            $table->text('http_path')->nullable();
            $table->timestamps();
        });

        Schema::create('admin_role_users', function (Blueprint $table) {
            $table->integer('role_id');
            $table->integer('user_id');
            $table->index(['role_id', 'user_id']);
        });

        Schema::create('admin_role_permissions', function (Blueprint $table) {
            $table->integer('role_id');
            $table->integer('permission_id');
            $table->index(['role_id', 'permission_id']);
        });

        Schema::create('admin_user_permissions', function (Blueprint $table) {
            $table->integer('user_id');
            $table->integer('permission_id');
            $table->index(['user_id', 'permission_id']);
        });

        Schema::create('admin_operation_logs', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('user_id');
            $table->string('path');
            $table->string('method', 10);
            $table->string('ip');
            $table->text('input');
            $table->index('user_id');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('admin_uses');
        Schema::dropIfExists('menus');
        Schema::dropIfExists('admin_roles');
        Schema::dropIfExists('admin_permissions');
        Schema::dropIfExists('admin_role_users');
        Schema::dropIfExists('admin_role_permissions');
        Schema::dropIfExists('admin_user_permissions');
        Schema::dropIfExists('admin_operation_logs');
    }
}
